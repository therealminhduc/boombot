name: Deploy to VPS

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build release binary
        run: cargo build --release --package discord --bin boombot

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: boombot-binary
          path: target/release/boombot
          retention-days: 30

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: boombot-binary

      - name: Make binary executable
        run: chmod +x boombot

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Verify and prepare directories
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.VPS_IP }} "
            echo 'Current directory structure:'
            ls -la /home/ubuntu/boombot/
            
            echo 'Ensuring directories exist with correct permissions...'
            sudo rm -rf /home/ubuntu/boombot/discord
            sudo mkdir -p /home/ubuntu/boombot/discord
            sudo mkdir -p /home/ubuntu/boombot/data
            sudo chown -R ubuntu:ubuntu /home/ubuntu/boombot
            sudo chmod -R 755 /home/ubuntu/boombot
            
            echo 'Updated directory structure:'
            ls -la /home/ubuntu/boombot/
          "

      - name: Setup Discord service
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISCORD_APPLICATION_ID: ${{ secrets.DISCORD_APPLICATION_ID }}
          DATABASE_PATH: ${{ vars.DATABASE_PATH }}
          
        run: |
          # Copy template and substitute variables
          cp .github/templates/systemd-discord.service /tmp/boombot-discord.service
          sed -i "s/{{DISCORD_TOKEN}}/${DISCORD_TOKEN}/g" /tmp/boombot-discord.service
          sed -i "s/{{DISCORD_APPLICATION_ID}}/${DISCORD_APPLICATION_ID}/g" /tmp/boombot-discord.service
          sed -i "s|{{DATABASE_PATH}}|${DATABASE_PATH}|g" /tmp/boombot-discord.service
          
          # Deploy the service file
          scp -o StrictHostKeyChecking=no /tmp/boombot-discord.service ubuntu@${{ secrets.VPS_IP }}:/tmp/
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.VPS_IP }} "
            sudo mv /tmp/boombot-discord.service /etc/systemd/system/boombot.service
          "

      - name: Deploy binary
        run: |
          echo "Current local binary:"
          ls -la boombot
          
          echo "Copying binary to server..."
          scp -v -o StrictHostKeyChecking=no boombot ubuntu@${{ secrets.VPS_IP }}:/home/ubuntu/boombot/discord/
          
          echo "Verifying deployment and starting service..."
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.VPS_IP }} "
            echo 'Deployed binary:'
            ls -la /home/ubuntu/boombot/discord/
            
            # Make binary executable and restart service
            chmod +x /home/ubuntu/boombot/discord/boombot
            sudo systemctl daemon-reload
            sudo systemctl enable boombot
            sudo systemctl restart boombot
            
            echo 'Service status:'
            sudo systemctl status boombot --no-pager
          "